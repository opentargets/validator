# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: build-release

on:
  release:
    types:
      - published
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

env:
  TAG: ${{ github.ref_name }}
  REPO: ${{ github.event.repository.name }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: 'uv.lock'

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: install
        run: uv sync --all-extras --dev

      - name: run tests
        run: uv run pytest

  lint:
    name: Check code style
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: 'uv.lock'

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: install
        run: uv sync --all-extras --dev

      - name: run ruff
        run: uv run ruff check --output-format=github .

      - name: run ruff format check
        run: uv run ruff format --check .

  build:
    name: Build package
    runs-on: ubuntu-22.04
    needs: [test, lint]

    steps:
      - uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: 'uv.lock'

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: install
        run: uv sync --all-extras --dev

      - name: build package
        run: uv build

      - name: check package
        run: uv run twine check dist/*

      - name: upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 1

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-22.04
    needs: build
    # Note: Environment 'pypi' must be created in repository settings
    # environment:
    #   name: pypi
    #   url: https://pypi.org/project/opentargets-validator

    steps:
      - name: download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: 'uv.lock'

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: install
        run: uv sync --all-extras --dev

      - name: verify distributions
        run: |
          echo "Verifying distributions:"
          ls -la dist/
          echo "Checking package integrity:"
          uv run twine check dist/*

      - name: publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          print-hash: true
